[gd_scene load_steps=15 format=3]

[ext_resource type="Script" path="res://World/Clouds/clouds.gd" id="1"]
[ext_resource type="Shader" uid="uid://cmyeclhrvhn2o" path="res://World/Clouds/foliage_shader_G4alpha10.tres" id="2"]
[ext_resource type="Texture2D" uid="uid://1b7e0onwpu6l" path="res://World/Clouds/FX_CloudAlpha01.png" id="3"]
[ext_resource type="Material" uid="uid://cvhasw6hagxcb" path="res://World/Clouds/clouds.tres" id="4"]

[sub_resource type="FastNoiseLite" id="1"]
noise_type = 0
frequency = 1.0
fractal_type = 3
fractal_octaves = 10
script = null

[sub_resource type="NoiseTexture2D" id="2"]
noise = SubResource("1")
script = null

[sub_resource type="ShaderMaterial" id="3"]
shader = ExtResource("2")
shader_parameter/instance_rows = 22.0
shader_parameter/instance_rot_randomize = 0.0
shader_parameter/instance_spacing = 6.0
shader_parameter/instance_scale_x = 1.0
shader_parameter/instance_scale_y = 8.0
shader_parameter/instance_scale_z = 1.0
shader_parameter/instance_scale_randomize = 1.0
shader_parameter/instance_pos_randomize = 1.0
shader_parameter/instance_scale_min = 1.0
shader_parameter/instance_scale_max = 1.0
shader_parameter/_coverage_altitude = 1.0
shader_parameter/_coverage_range = 20.0
shader_parameter/_slope_coverage = 0.0
shader_parameter/clumping_strength = 60.0
shader_parameter/terrain_normal_basis = Basis(1, 0, 0, 0, 1, 0, 0, 0, 1)
shader_parameter/instance_orient_to_normal = false
shader_parameter/instance_orientation_influence = 1.0
shader_parameter/__terrain_amplitude = -5.0
shader_parameter/map_heightmap_size = Vector2(2000, 2000)
shader_parameter/map_normalmap_size = Vector2(2000, 2000)
shader_parameter/map_heightmap = null
shader_parameter/map_normalmap = null
shader_parameter/map_clumpmap = SubResource("2")
script = null

[sub_resource type="StandardMaterial3D" id="4"]
transparency = 4
shading_mode = 0
specular_mode = 2
albedo_color = Color(0.823529, 0.698039, 0.678431, 0.54902)
albedo_texture = ExtResource("3")
billboard_mode = 1
script = null

[sub_resource type="QuadMesh" id="5"]
material = SubResource("4")
size = Vector2(30, 30)
script = null

[sub_resource type="Shader" id="6"]
code = "shader_type particles;

uniform float instance_rows;
uniform float instance_rot_randomize = 2.5;
uniform float instance_spacing = 1.0;
uniform float instance_scale_x = 1.0;
uniform	float instance_scale_y = 1.0;
uniform float instance_scale_z = 1.0;
uniform float instance_scale_randomize = 1.0;
uniform float instance_pos_randomize : hint_range(0.0, 50.0) =  2.0;
uniform float instance_scale_min = 0.2;
uniform float instance_scale_max = 1.2;
uniform float _coverage_altitude = 10.0;
uniform float _coverage_range = 100.0;
uniform float _slope_coverage = 0.5;
uniform float clumping_strength : hint_range(0.0, 100.0) = 20.0;
uniform mat3 terrain_normal_basis;

uniform sampler2D map_heightmap;
uniform sampler2D map_normalmap;
uniform bool instance_orient_to_normal = false;
uniform float instance_orientation_influence : hint_range(0.0, 10.0) = 1.0;
uniform float __terrain_amplitude;
uniform vec2 map_heightmap_size = vec2(2000.0, 2000.0);
uniform vec2 map_normalmap_size = vec2(2000.0, 2000.0);
uniform sampler2D map_clumpmap;

float get_height(vec2 pos) {
	pos -= 0.5 * map_heightmap_size;
	pos /= map_heightmap_size;	
	return 2.0*__terrain_amplitude * texture(map_heightmap, pos).r;
}

vec3 unpack_normalmap(vec3 rgb) {
vec3 n = rgb.xzy * 2.0 - vec3(1.0);
n.z *= -1.0;
return n;
}	

vec3 get_normal(vec2 pos) {
	pos -= 0.5 * map_normalmap_size;
	pos /= map_normalmap_size;
	return terrain_normal_basis * unpack_normalmap(texture(map_normalmap, pos).rgb);
}

float get_clumps(vec2 pos) {
	pos -= 0.5 * map_heightmap_size;
	pos /= map_heightmap_size;	
	return 100.0 * texture(map_clumpmap, pos).r;
}

void start() {	
	// get position
	vec3 pos = vec3(0.0, 0.0, 0.0);
	pos.z = float(INDEX);
	pos.x = mod(pos.z, instance_rows);
	pos.z = (pos.z - pos.x) / instance_rows;
	
	// center the emitter
	pos.x -= instance_rows * 0.5;
	pos.z -= instance_rows * 0.5;
	
	// apply instance spacing
	pos *= instance_spacing;
	
	// center on position of emitter
	pos.x += EMISSION_TRANSFORM[3][0] - mod(EMISSION_TRANSFORM[3][0], instance_spacing);
	pos.z += EMISSION_TRANSFORM[3][2] - mod(EMISSION_TRANSFORM[3][2], instance_spacing);
	
	// add noise 
	vec3 noise = texture(map_heightmap, pos.xz * 0.1).rgb;
	pos.x += noise.z * instance_spacing * instance_pos_randomize;
	pos.z -= noise.x * instance_spacing * instance_pos_randomize;

	// apply height
	pos.y = get_height(pos.xz);	
	float y2 = get_height(pos.xz + vec2(1.0, 0.0));
	float y3 = get_height(pos.xz + vec2(0.0, 1.0));
	float y4 = get_clumps(pos.xz);
	
	// hide parts from steep areas
	if (abs(y2 - pos.y) > _slope_coverage) {
		pos.y = -10000.0;
	} else if (abs(y3 - pos.y) > _slope_coverage) {
		pos.y = -10000.0;
	}	
	if (abs(pos.y) < _coverage_altitude*5.0-_coverage_range) {
		pos.y = -10000.0;
	} 	
	if (abs(pos.y) > _coverage_altitude*5.0+_coverage_range) {
		pos.y = -10000.0;
	} 	
	
	// clumping
	vec3 clumps = texture(map_clumpmap, pos.zx).rgb;
	if (abs(y4) < clumping_strength) {
		pos.y = -10000.0;
	}
	
	// rotate transform
	vec3 tex_scale = vec3(1.0) ;

	vec3 base_scale = vec3(mix(instance_scale_min, instance_scale_max, noise.x)*instance_scale_x,mix(instance_scale_min, instance_scale_max, noise.y)*instance_scale_y,mix(instance_scale_min, instance_scale_max, noise.z)*instance_scale_z );
	base_scale *= base_scale*instance_scale_randomize;
	base_scale = sign(base_scale) * max(abs(base_scale), 0.1);
	
	// update transform
	pos.x += cos( noise.x * instance_pos_randomize) * base_scale.x  ;
	pos.z += sin( noise.z * instance_pos_randomize) * base_scale.z ; 
	
	// re-transform to orient to normal if the setting is on	
	if (instance_orient_to_normal == true){
	TRANSFORM[1].xyz = get_normal(pos.xz) * instance_orientation_influence;
	TRANSFORM[2].xyz = sin(get_normal(pos.zx) * faceforward(vec3(1.0),TRANSFORM[1].xyz, vec3(0.0, 0.0, 1.0))) * instance_orientation_influence ;
	TRANSFORM[0].xyz = sin(get_normal(pos.zx) * faceforward(vec3(1.0),TRANSFORM[1].xyz, vec3(1.0, 0.0, 0.0))) * instance_orientation_influence ;
	}
	else {
		TRANSFORM[0].xyz = vec3(0.0);
		TRANSFORM[1].xyz = vec3(0.0);
		TRANSFORM[2].xyz = vec3(0.0);}
	
	// finalize transform positioning and scaling including randomizations	
	TRANSFORM[3][0] = pos.x;
	TRANSFORM[3][1] = pos.y;
	TRANSFORM[3][2] = pos.z;
	
	TRANSFORM[0][0] = cos(noise.x * instance_rot_randomize) * base_scale.x;
	TRANSFORM[0][2] = -sin(noise.x * instance_rot_randomize) * base_scale.x;
	TRANSFORM[2][0] = sin(noise.z * instance_rot_randomize) * base_scale.z;
	TRANSFORM[2][2] = cos(noise.z * instance_rot_randomize) * base_scale.z;
	
	TRANSFORM[0][0]  = base_scale.x;
	TRANSFORM[1][1] =  base_scale.y;
	TRANSFORM[2][2]  = base_scale.z;

}	"
script = null

[sub_resource type="FastNoiseLite" id="7"]
noise_type = 0
seed = 1
frequency = 1.0
fractal_type = 3
fractal_octaves = 10
script = null

[sub_resource type="NoiseTexture2D" id="8"]
noise = SubResource("7")
script = null

[sub_resource type="ShaderMaterial" id="9"]
shader = SubResource("6")
shader_parameter/instance_rows = 22.0
shader_parameter/instance_rot_randomize = 0.0
shader_parameter/instance_spacing = 6.0
shader_parameter/instance_scale_x = 1.0
shader_parameter/instance_scale_y = 8.0
shader_parameter/instance_scale_z = 1.0
shader_parameter/instance_scale_randomize = 1.0
shader_parameter/instance_pos_randomize = 1.0
shader_parameter/instance_scale_min = 1.0
shader_parameter/instance_scale_max = 1.0
shader_parameter/_coverage_altitude = 1.0
shader_parameter/_coverage_range = 20.0
shader_parameter/_slope_coverage = 0.0
shader_parameter/clumping_strength = 60.0
shader_parameter/terrain_normal_basis = Basis(1, 0, 0, 0, 1, 0, 0, 0, 1)
shader_parameter/instance_orient_to_normal = false
shader_parameter/instance_orientation_influence = 1.0
shader_parameter/__terrain_amplitude = -12.0
shader_parameter/map_heightmap_size = Vector2(2000, 2000)
shader_parameter/map_normalmap_size = Vector2(2000, 2000)
shader_parameter/map_heightmap = null
shader_parameter/map_normalmap = null
shader_parameter/map_clumpmap = SubResource("8")
script = null

[sub_resource type="QuadMesh" id="10"]
material = ExtResource("4")
size = Vector2(20, 20)
script = null

[node name="Clouds" type="Node3D"]
transform = Transform3D(0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0)
script = ExtResource("1")

[node name="CloudGen" type="GPUParticles3D" parent="."]
emitting = false
amount = 500
lifetime = 0.5
explosiveness = 1.0
interpolate = false
fract_delta = false
visibility_aabb = AABB(-1129.27, -12.9093, -602.379, 2258.54, 25.8186, 1204.76)
trail_lifetime = 0.56
process_material = SubResource("3")
draw_pass_1 = SubResource("5")

[node name="CloudGen2" type="GPUParticles3D" parent="."]
transform = Transform3D(0.8, 0, 0, 0, 0.8, 0, 0, 0, 0.8, 0, 0, 0)
emitting = false
amount = 500
lifetime = 0.5
explosiveness = 1.0
interpolate = false
fract_delta = false
visibility_aabb = AABB(-1129.27, -12.9093, -602.379, 2258.54, 25.8186, 1204.76)
trail_lifetime = 0.56
process_material = SubResource("9")
draw_pass_1 = SubResource("10")
