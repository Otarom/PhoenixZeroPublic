[gd_scene load_steps=6 format=3]

[sub_resource type="StandardMaterial3D" id="1"]
transparency = 1
albedo_color = Color(1, 1, 1, 0)
script = null

[sub_resource type="StandardMaterial3D" id="2"]
transparency = 1
albedo_color = Color(0.223529, 0.580392, 0.890196, 0)
script = null

[sub_resource type="Shader" id="3"]
code = "shader_type spatial;

render_mode blend_add;

uniform vec4 color_gap: source_color = vec4(0.25);
uniform vec4 color_stripe: source_color = vec4(1.0, 0.75, 0.0, 1.0);
uniform float divisions = 8.0; // increase for more stripe density
uniform float stripe_bias = 2.6; // 1.0 means no stripes; 2.0 means stripes and gaps are equal size
const float speed = 1.5;
const float angle = 1.0; // in radians

void fragment() {
//	vec4 test = VIEW_MATRIX * vec4(VERTEX.y, VERTEX.z,VERTEX.x, 0.1);
	float w = cos(angle) * VERTEX.y + sin(angle) * VERTEX.z - speed * -TIME;
//	float w = cos(angle) * UV.x + sin(angle) * UV.y - speed * TIME;
	if (floor(mod(w * divisions, stripe_bias)) < 0.0001) {
		vec3 final;
		final.r = color_gap.r* (mod(w * divisions, stripe_bias));
		final.g = color_gap.g* (mod(w * divisions, stripe_bias));
		final.b = color_gap.b* (mod(w * divisions, stripe_bias));
		ALBEDO = final;
		ALPHA = color_gap.a * (mod(w * divisions, stripe_bias));
	} else {
		vec3 final;
		final.r = color_stripe.r;
		final.g = color_stripe.g;
		final.b = color_stripe.b;
		ALBEDO = final;
		ALPHA = color_stripe.a;
	}
}
"
script = null

[sub_resource type="ShaderMaterial" id="4"]
render_priority = 2
next_pass = SubResource("2")
shader = SubResource("3")
shader_parameter/color_gap = Color(0.329412, 0.913725, 0.921569, 0.00784314)
shader_parameter/color_stripe = Color(0.483291, 0.833629, 0.984755, 0.741176)
shader_parameter/divisions = 1.5
shader_parameter/stripe_bias = 1.2
script = null

[sub_resource type="StandardMaterial3D" id="5"]
render_priority = 1
transparency = 1
albedo_color = Color(0.290196, 0.745098, 1, 0)
script = null

[node name="Teleport" type="Node3D"]

[node name="CSGSphere3D" type="CSGSphere3D" parent="."]
material_override = SubResource("1")
material_overlay = SubResource("4")
flip_faces = true
radius = 1.75
radial_segments = 20
rings = 20

[node name="CSGSphere3D2" type="CSGSphere3D" parent="."]
material_override = SubResource("5")
material_overlay = SubResource("4")
radius = 1.75
radial_segments = 20
rings = 20
