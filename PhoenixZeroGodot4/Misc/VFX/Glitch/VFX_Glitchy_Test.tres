[gd_resource type="ShaderMaterial" load_steps=65 format=3 uid="uid://bbvuw3gs63qhp"]

[sub_resource type="VisualShaderNodeColorParameter" id="25"]
expanded_output_ports = [0]
parameter_name = "albedo"

[sub_resource type="VisualShaderNodeInput" id="26"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeFloatOp" id="27"]
default_input_values = [0, 0.0, 1, 1.0]

[sub_resource type="VisualShaderNodeFloatOp" id="28"]
default_input_values = [0, 1.0, 1, 0.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="29"]
default_input_values = [0, 0.25, 1, 0.0]
operator = 3

[sub_resource type="VisualShaderNodeFloatOp" id="30"]
default_input_values = [0, 0.5, 1, 0.0]
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="31"]
operator = 6

[sub_resource type="VisualShaderNodeFloatOp" id="32"]
default_input_values = [0, 0.0, 1, 4.0]
operator = 3

[sub_resource type="FastNoiseLite" id="15"]

[sub_resource type="NoiseTexture2D" id="16"]
seamless = true
seamless_blend_skirt = 0.34
normalize = false
noise = SubResource("15")

[sub_resource type="VisualShaderNodeTexture" id="17"]
texture = SubResource("16")

[sub_resource type="VisualShaderNodeFloatFunc" id="18"]
function = 29

[sub_resource type="VisualShaderNodeFloatParameter" id="19"]
parameter_name = "alpha"
hint = 1
max = 2.0

[sub_resource type="VisualShaderNodeFloatOp" id="20"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="21"]
default_input_values = [0, 0.0, 1, 0.5]

[sub_resource type="VisualShaderNodeColorParameter" id="22"]
parameter_name = "emission_color"

[sub_resource type="VisualShaderNodeFloatParameter" id="23"]
parameter_name = "emission_str"

[sub_resource type="VisualShaderNodeVectorOp" id="24"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="11"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="12"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorOp" id="13"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, -0.5)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeRandomRange" id="14"]
default_input_values = [0, Vector3(2, 0, -2), 1, 0.0, 2, 2.0]

[sub_resource type="FastNoiseLite" id="1"]
noise_type = 3
frequency = 0.0023

[sub_resource type="NoiseTexture2D" id="2"]
seamless_blend_skirt = 0.114
normalize = false
noise = SubResource("1")

[sub_resource type="VisualShaderNodeTexture" id="3"]
texture = SubResource("2")

[sub_resource type="VisualShaderNodeInput" id="4"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="5"]

[sub_resource type="VisualShaderNodeVectorOp" id="6"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="7"]
input_name = "normal"

[sub_resource type="VisualShaderNodeFloatParameter" id="8"]
parameter_name = "displace"

[sub_resource type="VisualShaderNodeVectorOp" id="9"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="10"]
input_name = "time"

[sub_resource type="VisualShader" id="33"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_lambert, specular_schlick_ggx, depth_prepass_alpha, debug_shadow_splits;

uniform sampler2D tex_vtx_2;
uniform float displace;
uniform vec4 albedo : source_color;
uniform sampler2D tex_frg_2;
uniform vec4 emission_color : source_color;
uniform float emission_str;




// 3D Noise with friendly permission by Inigo Quilez
vec3 hash_noise_range( vec3 p ) {
	p *= mat3(vec3(127.1, 311.7, -53.7), vec3(269.5, 183.3, 77.1), vec3(-301.7, 27.3, 215.3));
	return 2.0 * fract(fract(p)*4375.55) -1.;
}


void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;


// Input:6
	vec3 n_out6p0 = NORMAL;


// Input:10
	vec2 n_out10p0 = UV;


// Input:9
	float n_out9p0 = TIME;


// RandomRange:13
	vec3 n_in13p0 = vec3(2.00000, 0.00000, -2.00000);
	float n_in13p1 = 0.00000;
	float n_in13p2 = 2.00000;
	float n_out13p0 = mix(n_in13p1, n_in13p2, hash_noise_range(n_in13p0).x);


// VectorOp:12
	vec2 n_out12p0 = vec2(n_out9p0) * vec2(n_out13p0);


// VectorOp:11
	vec2 n_out11p0 = n_out10p0 + n_out12p0;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_vtx_2, n_out11p0);


// VectorOp:5
	vec3 n_out5p0 = n_out6p0 * vec3(n_out2p0.xyz);


// FloatParameter:7
	float n_out7p0 = displace;


// VectorOp:8
	vec3 n_out8p0 = n_out5p0 * vec3(n_out7p0);


// VectorOp:4
	vec3 n_out4p0 = n_out3p0 + n_out8p0;


// Output:0
	VERTEX = n_out4p0;


}

void fragment() {
// ColorParameter:10
	vec4 n_out10p0 = albedo;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// Input:11
	vec4 n_out11p0 = COLOR;
	float n_out11p4 = n_out11p0.a;


// FloatOp:6
	float n_in6p1 = 0.50000;
	float n_out6p0 = n_out11p4 + n_in6p1;


// FloatOp:5
	float n_out5p0 = n_out2p0.x * n_out6p0;


// FloatFunc:3
	float n_out3p0 = roundEven(n_out5p0);


// ColorParameter:7
	vec4 n_out7p0 = emission_color;


// FloatParameter:8
	float n_out8p0 = emission_str;


// FloatOp:13
	float n_out13p0 = n_out8p0 * n_out11p4;


// FloatOp:12
	float n_out12p0 = n_out11p4 + n_out13p0;


// FloatOp:17
	float n_in17p1 = 4.00000;
	float n_out17p0 = n_out8p0 / n_in17p1;


// FloatOp:14
	float n_out14p0 = n_out17p0 / n_out11p4;


// FloatOp:15
	float n_out15p0 = n_out12p0 - n_out14p0;


// FloatOp:16
	float n_in16p1 = 0.00000;
	float n_out16p0 = max(n_out15p0, n_in16p1);


// VectorOp:9
	vec3 n_out9p0 = vec3(n_out7p0.xyz) * vec3(n_out16p0);


// Output:0
	ALBEDO = vec3(n_out10p0.xyz);
	ALPHA = n_out3p0;
	EMISSION = n_out9p0;


}
"
modes/cull = 2
flags/depth_prepass_alpha = true
flags/debug_shadow_splits = true
nodes/vertex/0/position = Vector2(480, 20)
nodes/vertex/2/node = SubResource("3")
nodes/vertex/2/position = Vector2(-300, 180)
nodes/vertex/3/node = SubResource("4")
nodes/vertex/3/position = Vector2(-100, 0)
nodes/vertex/4/node = SubResource("5")
nodes/vertex/4/position = Vector2(260, -20)
nodes/vertex/5/node = SubResource("6")
nodes/vertex/5/position = Vector2(-120, 120)
nodes/vertex/6/node = SubResource("7")
nodes/vertex/6/position = Vector2(-380, 80)
nodes/vertex/7/node = SubResource("8")
nodes/vertex/7/position = Vector2(-100, 240)
nodes/vertex/8/node = SubResource("9")
nodes/vertex/8/position = Vector2(120, 80)
nodes/vertex/9/node = SubResource("10")
nodes/vertex/9/position = Vector2(-980, 260)
nodes/vertex/10/node = SubResource("11")
nodes/vertex/10/position = Vector2(-800, 120)
nodes/vertex/11/node = SubResource("12")
nodes/vertex/11/position = Vector2(-544.118, 209.468)
nodes/vertex/12/node = SubResource("13")
nodes/vertex/12/position = Vector2(-760, 260)
nodes/vertex/13/node = SubResource("14")
nodes/vertex/13/position = Vector2(-1000, 380)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 0, 4, 0, 0, 0, 2, 0, 5, 1, 6, 0, 5, 0, 7, 0, 8, 1, 5, 0, 8, 0, 8, 0, 4, 1, 10, 0, 11, 0, 9, 0, 12, 0, 12, 0, 11, 1, 11, 0, 2, 0, 13, 0, 12, 1)
nodes/fragment/2/node = SubResource("17")
nodes/fragment/2/position = Vector2(-420, 160)
nodes/fragment/3/node = SubResource("18")
nodes/fragment/3/position = Vector2(60, 240)
nodes/fragment/4/node = SubResource("19")
nodes/fragment/4/position = Vector2(-1340, 380)
nodes/fragment/5/node = SubResource("20")
nodes/fragment/5/position = Vector2(-80, 240)
nodes/fragment/6/node = SubResource("21")
nodes/fragment/6/position = Vector2(-200, 340)
nodes/fragment/7/node = SubResource("22")
nodes/fragment/7/position = Vector2(-60, 340)
nodes/fragment/8/node = SubResource("23")
nodes/fragment/8/position = Vector2(-820, 640)
nodes/fragment/9/node = SubResource("24")
nodes/fragment/9/position = Vector2(200, 340)
nodes/fragment/10/node = SubResource("25")
nodes/fragment/10/position = Vector2(60, 20)
nodes/fragment/11/node = SubResource("26")
nodes/fragment/11/position = Vector2(-720, 440)
nodes/fragment/12/node = SubResource("27")
nodes/fragment/12/position = Vector2(-280, 480)
nodes/fragment/13/node = SubResource("28")
nodes/fragment/13/position = Vector2(-420, 580)
nodes/fragment/14/node = SubResource("29")
nodes/fragment/14/position = Vector2(-420, 700)
nodes/fragment/15/node = SubResource("30")
nodes/fragment/15/position = Vector2(-120, 580)
nodes/fragment/16/node = SubResource("31")
nodes/fragment/16/position = Vector2(40, 500)
nodes/fragment/17/node = SubResource("32")
nodes/fragment/17/position = Vector2(-600, 680)
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 1, 5, 0, 3, 0, 2, 0, 5, 0, 3, 0, 0, 1, 7, 0, 9, 0, 9, 0, 0, 5, 10, 0, 0, 0, 11, 4, 6, 0, 11, 4, 12, 0, 11, 4, 13, 1, 13, 0, 12, 1, 11, 4, 14, 1, 15, 0, 16, 0, 16, 0, 9, 1, 12, 0, 15, 0, 14, 0, 15, 1, 8, 0, 13, 0, 8, 0, 17, 0, 17, 0, 14, 0)

[sub_resource type="ShaderMaterial" id="34"]
render_priority = -3
shader = SubResource("33")
shader_parameter/displace = -5.205
shader_parameter/albedo = Color(0, 0, 0, 1)
shader_parameter/emission_color = Color(0.211765, 0, 0.0431373, 1)
shader_parameter/emission_str = 2.055

[sub_resource type="ShaderMaterial" id="35"]
render_priority = -2
next_pass = SubResource("34")
shader = SubResource("33")
shader_parameter/displace = 3.6
shader_parameter/albedo = Color(0, 0, 0, 1)
shader_parameter/emission_color = Color(0.482353, 0, 0.145098, 1)
shader_parameter/emission_str = 1.37

[sub_resource type="VisualShaderNodeColorParameter" id="56"]
expanded_output_ports = [0]
parameter_name = "albedo"

[sub_resource type="VisualShaderNodeInput" id="57"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeFloatOp" id="58"]
default_input_values = [0, 0.0, 1, 1.0]

[sub_resource type="VisualShaderNodeFloatOp" id="59"]
default_input_values = [0, 1.0, 1, 0.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="60"]
default_input_values = [0, 0.25, 1, 0.0]
operator = 3

[sub_resource type="VisualShaderNodeFloatOp" id="61"]
default_input_values = [0, 0.5, 1, 0.0]
operator = 1

[sub_resource type="VisualShaderNodeFloatOp" id="62"]
operator = 6

[sub_resource type="VisualShaderNodeFloatOp" id="63"]
default_input_values = [0, 0.0, 1, 4.0]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id="48"]
texture = SubResource("16")

[sub_resource type="VisualShaderNodeFloatFunc" id="49"]
function = 29

[sub_resource type="VisualShaderNodeFloatParameter" id="50"]
parameter_name = "alpha"
hint = 1
max = 2.0

[sub_resource type="VisualShaderNodeFloatOp" id="51"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="52"]
default_input_values = [0, 0.0, 1, 0.5]

[sub_resource type="VisualShaderNodeColorParameter" id="53"]
parameter_name = "emission_color"

[sub_resource type="VisualShaderNodeFloatParameter" id="54"]
parameter_name = "emission_str"

[sub_resource type="VisualShaderNodeVectorOp" id="55"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="44"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="45"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorOp" id="46"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, -0.5)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeRandomRange" id="47"]
default_input_values = [0, Vector3(2, 0, -2), 1, 0.0, 2, 2.0]

[sub_resource type="VisualShaderNodeTexture" id="36"]
texture = SubResource("2")

[sub_resource type="VisualShaderNodeInput" id="37"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="38"]

[sub_resource type="VisualShaderNodeVectorOp" id="39"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="40"]
input_name = "normal"

[sub_resource type="VisualShaderNodeFloatParameter" id="41"]
parameter_name = "displace"

[sub_resource type="VisualShaderNodeVectorOp" id="42"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="43"]
input_name = "time"

[sub_resource type="VisualShader" id="64"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_lambert, specular_schlick_ggx, depth_prepass_alpha, debug_shadow_splits;

uniform sampler2D tex_vtx_2;
uniform float displace;
uniform vec4 albedo : source_color;
uniform sampler2D tex_frg_2;
uniform vec4 emission_color : source_color;
uniform float emission_str;




// 3D Noise with friendly permission by Inigo Quilez
vec3 hash_noise_range( vec3 p ) {
	p *= mat3(vec3(127.1, 311.7, -53.7), vec3(269.5, 183.3, 77.1), vec3(-301.7, 27.3, 215.3));
	return 2.0 * fract(fract(p)*4375.55) -1.;
}


void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;


// Input:6
	vec3 n_out6p0 = NORMAL;


// Input:10
	vec2 n_out10p0 = UV;


// Input:9
	float n_out9p0 = TIME;


// RandomRange:13
	vec3 n_in13p0 = vec3(2.00000, 0.00000, -2.00000);
	float n_in13p1 = 0.00000;
	float n_in13p2 = 2.00000;
	float n_out13p0 = mix(n_in13p1, n_in13p2, hash_noise_range(n_in13p0).x);


// VectorOp:12
	vec2 n_out12p0 = vec2(n_out9p0) * vec2(n_out13p0);


// VectorOp:11
	vec2 n_out11p0 = n_out10p0 + n_out12p0;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_vtx_2, n_out11p0);


// VectorOp:5
	vec3 n_out5p0 = n_out6p0 * vec3(n_out2p0.xyz);


// FloatParameter:7
	float n_out7p0 = displace;


// VectorOp:8
	vec3 n_out8p0 = n_out5p0 * vec3(n_out7p0);


// VectorOp:4
	vec3 n_out4p0 = n_out3p0 + n_out8p0;


// Output:0
	VERTEX = n_out4p0;


}

void fragment() {
// ColorParameter:10
	vec4 n_out10p0 = albedo;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// Input:11
	vec4 n_out11p0 = COLOR;
	float n_out11p4 = n_out11p0.a;


// FloatOp:6
	float n_in6p1 = 0.50000;
	float n_out6p0 = n_out11p4 + n_in6p1;


// FloatOp:5
	float n_out5p0 = n_out2p0.x * n_out6p0;


// FloatFunc:3
	float n_out3p0 = roundEven(n_out5p0);


// ColorParameter:7
	vec4 n_out7p0 = emission_color;


// FloatParameter:8
	float n_out8p0 = emission_str;


// FloatOp:13
	float n_out13p0 = n_out8p0 * n_out11p4;


// FloatOp:12
	float n_out12p0 = n_out11p4 + n_out13p0;


// FloatOp:17
	float n_in17p1 = 4.00000;
	float n_out17p0 = n_out8p0 / n_in17p1;


// FloatOp:14
	float n_out14p0 = n_out17p0 / n_out11p4;


// FloatOp:15
	float n_out15p0 = n_out12p0 - n_out14p0;


// FloatOp:16
	float n_in16p1 = 0.00000;
	float n_out16p0 = max(n_out15p0, n_in16p1);


// VectorOp:9
	vec3 n_out9p0 = vec3(n_out7p0.xyz) * vec3(n_out16p0);


// Output:0
	ALBEDO = vec3(n_out10p0.xyz);
	ALPHA = n_out3p0;
	EMISSION = n_out9p0;


}
"
graph_offset = Vector2(-1275.4, 284.635)
modes/cull = 2
flags/depth_prepass_alpha = true
flags/debug_shadow_splits = true
nodes/vertex/0/position = Vector2(480, 20)
nodes/vertex/2/node = SubResource("36")
nodes/vertex/2/position = Vector2(-300, 180)
nodes/vertex/3/node = SubResource("37")
nodes/vertex/3/position = Vector2(-100, 0)
nodes/vertex/4/node = SubResource("38")
nodes/vertex/4/position = Vector2(260, -20)
nodes/vertex/5/node = SubResource("39")
nodes/vertex/5/position = Vector2(-120, 120)
nodes/vertex/6/node = SubResource("40")
nodes/vertex/6/position = Vector2(-380, 80)
nodes/vertex/7/node = SubResource("41")
nodes/vertex/7/position = Vector2(-100, 240)
nodes/vertex/8/node = SubResource("42")
nodes/vertex/8/position = Vector2(120, 80)
nodes/vertex/9/node = SubResource("43")
nodes/vertex/9/position = Vector2(-980, 260)
nodes/vertex/10/node = SubResource("44")
nodes/vertex/10/position = Vector2(-800, 120)
nodes/vertex/11/node = SubResource("45")
nodes/vertex/11/position = Vector2(-544.118, 209.468)
nodes/vertex/12/node = SubResource("46")
nodes/vertex/12/position = Vector2(-760, 260)
nodes/vertex/13/node = SubResource("47")
nodes/vertex/13/position = Vector2(-1000, 380)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 0, 4, 0, 0, 0, 2, 0, 5, 1, 6, 0, 5, 0, 7, 0, 8, 1, 5, 0, 8, 0, 8, 0, 4, 1, 10, 0, 11, 0, 9, 0, 12, 0, 12, 0, 11, 1, 11, 0, 2, 0, 13, 0, 12, 1)
nodes/fragment/2/node = SubResource("48")
nodes/fragment/2/position = Vector2(-420, 160)
nodes/fragment/3/node = SubResource("49")
nodes/fragment/3/position = Vector2(60, 240)
nodes/fragment/4/node = SubResource("50")
nodes/fragment/4/position = Vector2(-1340, 380)
nodes/fragment/5/node = SubResource("51")
nodes/fragment/5/position = Vector2(-80, 240)
nodes/fragment/6/node = SubResource("52")
nodes/fragment/6/position = Vector2(-200, 340)
nodes/fragment/7/node = SubResource("53")
nodes/fragment/7/position = Vector2(-60, 340)
nodes/fragment/8/node = SubResource("54")
nodes/fragment/8/position = Vector2(-820, 640)
nodes/fragment/9/node = SubResource("55")
nodes/fragment/9/position = Vector2(200, 340)
nodes/fragment/10/node = SubResource("56")
nodes/fragment/10/position = Vector2(60, 20)
nodes/fragment/11/node = SubResource("57")
nodes/fragment/11/position = Vector2(-720, 440)
nodes/fragment/12/node = SubResource("58")
nodes/fragment/12/position = Vector2(-280, 480)
nodes/fragment/13/node = SubResource("59")
nodes/fragment/13/position = Vector2(-420, 580)
nodes/fragment/14/node = SubResource("60")
nodes/fragment/14/position = Vector2(-420, 700)
nodes/fragment/15/node = SubResource("61")
nodes/fragment/15/position = Vector2(-120, 580)
nodes/fragment/16/node = SubResource("62")
nodes/fragment/16/position = Vector2(40, 500)
nodes/fragment/17/node = SubResource("63")
nodes/fragment/17/position = Vector2(-600, 680)
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 1, 5, 0, 3, 0, 2, 0, 5, 0, 3, 0, 0, 1, 7, 0, 9, 0, 9, 0, 0, 5, 10, 0, 0, 0, 11, 4, 6, 0, 11, 4, 12, 0, 11, 4, 13, 1, 13, 0, 12, 1, 11, 4, 14, 1, 15, 0, 16, 0, 16, 0, 9, 1, 12, 0, 15, 0, 14, 0, 15, 1, 8, 0, 13, 0, 8, 0, 17, 0, 17, 0, 14, 0)

[resource]
render_priority = -1
next_pass = SubResource("35")
shader = SubResource("64")
shader_parameter/displace = -4.5
shader_parameter/albedo = Color(0, 0, 0, 1)
shader_parameter/emission_color = Color(0.415686, 0, 0.117647, 1)
shader_parameter/emission_str = 1.19
